import socket
import sys

# Server address and port
SERVER_ADDRESS = 'localhost'
SERVER_PORT = 51234

def encode_request(command, key, value=None):
    """
    Encode the request message according to the protocol.
    """
    if command == 'R':
        message = f"{len(f'R {key}')+3:03} R {key}"
    elif command == 'G':
        message = f"{len(f'G {key}')+3:03} G {key}"
    elif command == 'P':
        message = f"{len(f'P {key} {value}')+3:03} P {key} {value}"
    return message

def send_request(request):
    """
    Send the request to the server and receive the response.
    """
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        client_socket.connect((SERVER_ADDRESS, SERVER_PORT))
        client_socket.send(request.encode())
        response = client_socket.recv(1024).decode()
    except ConnectionRefusedError:
        print("Connection to server failed. Please check if the server is running.")
        response = None
    finally:
        client_socket.close()
    return response

def process_request_file(file_path):
    """
    Process the request file and send each request to the server.
    """
    try:
        with open(file_path, 'r') as file:
            for line in file:
                line = line.strip()
                if line:
                    parts = line.split()
                    command = parts[0]
                    key = parts[1]
                    value = ' '.join(parts[2:]) if len(parts) > 2 else None
                    request = encode_request(command, key, value)
                    response = send_request(request)
                    if response:
                        print(f"{line}: {response}")
                    else:
                        print(f"{line}: Request failed.")
    except FileNotFoundError:
        print(f"Error: The file '{file_path}' does not exist.")
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python client.py <request_file>")
        sys.exit(1)
    request_file = sys.argv[1]
    process_request_file(request_file)
